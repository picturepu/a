#! /usr/bin/env python
# -*- coding: utf-8 -*-
import telebot
import tg_analytic
from telebot import types
import pandas
import time
import cherrypy

API_TOKEN = '1592677355:AAG9cEilizbqUfUFAyfxacsnIqMb0IC7tCY' 

bot = telebot.TeleBot(API_TOKEN)

WEBHOOK_HOST = '20.185.43.20'
WEBHOOK_PORT = 8443
WEBHOOK_LISTEN = '0.0.0.0'

WEBHOOK_SSL_CERT = '/home/azureuser/tebot/webhook_cert.pem'
WEBHOOK_SSL_PRIV = '/home/azureuser/tebot/webhook_pkey.pem'

WEBHOOK_URL_BASE = "https://%s:%s" % (WEBHOOK_HOST, WEBHOOK_PORT)
WEBHOOK_URL_PATH = "/%s/" % (API_TOKEN)

class WebhookServer(object):
    @cherrypy.expose
    def index(self):
        if 'content-length' in cherrypy.request.headers and \
           'content-type' in cherrypy.request.headers and \
           cherrypy.request.headers['content-type'] == 'application/json':
            length = int(cherrypy.request.headers['content-length'])
            json_string = cherrypy.request.body.read(length).decode("utf-8")
            update = telebot.types.Update.de_json(json_string)
            bot.process_new_updates([update])
            return ''
        else:
            raise cherrypy.HTTPError(403)

##############################–ö–æ–º–∞–Ω–¥—ã##############################################
@bot.message_handler(commands=['start'])
def start(message):
    tg_analytic.statistics(message.chat.id, message.text)
    bot.reply_to(message, "–ü—Ä–∏–≤—ñ—Ç, —è –±–æ—Ç —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ —É –Ω–∞–≤—á–∞–Ω–Ω—ñ.", reply_markup=keyboard())
@bot.message_handler(commands=['help'])
def help(message):
    bot.reply_to(message, "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–ª–æ–º–∞–ª–æ—Å—å, –∏ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å –ø–æ—á–µ–º—É, —Ç–æ –ø–∏—à–∏ –º–Ω–µ @its_oneguy")
##############################–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —ç–∫—Ä–∞–Ω–∞##################################
def keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    ras1 = types.KeyboardButton('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è')
    sob2 = types.KeyboardButton('–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—ó')
    help3 = types.KeyboardButton('–°–∞–π—Ç–∏')
    sobyanin4 = types.KeyboardButton('Classroom-–∏')
    chats5 = types.KeyboardButton('–ß–∞—Ç–∏')
    niggi6 = types.KeyboardButton('–ö–Ω–∏–≥–∏')
    markup.add(ras1, sob2, help3, sobyanin4, chats5, niggi6)
    return markup
#######################–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–µ################################################
def keyboardate():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ü–æ–Ω–µ–¥—ñ–ª–æ–∫')
    btn2 = types.KeyboardButton('–í—ñ–≤—Ç–æ—Ä–æ–∫')
    btn3 = types.KeyboardButton('–°–µ—Ä–µ–¥–∞')
    btn4 = types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä')
    btn5 = types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü—è')
    btn6 = types.KeyboardButton('–°—É–±–æ—Ç–∞')
    btn7 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)
    return markup

def keyboardinfo():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    teacher1 = types.KeyboardButton('–í—á–∏—Ç–µ–ª—ñ')
    rozklad2 = types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥')
    rozkladzvinkiv3 = types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ –¥–∑–≤—ñ–Ω–∫—ñ–≤')
    nazad4 = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(teacher1, rozklad2, rozkladzvinkiv3, nazad4)
    return markup

def keyboardkonf():
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        konf1 = types.KeyboardButton('–§—ñ–∑–∏–∫–∞ zoom')
        konf2 = types.KeyboardButton('–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –Ü–¢ zoom')
        konf3 = types.KeyboardButton('–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ 1 –≥—Ä—É–ø–ø–∞ skype')
        konf4 = types.KeyboardButton('–ì–µ–æ–º–µ—Ç—Ä—ñ—è google')
        konf5 = types.KeyboardButton('–•—ñ–º—ñ—è google')
        konf6 = types.KeyboardButton('–ó–∞—Ä—É–±—ñ–∂–Ω–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞ zoom')
        konf7 = types.KeyboardButton('–ì–µ–æ–≥—Ä–∞—Ñ—ñ—è google')
        konf8 = types.KeyboardButton('–ê—Å—Ç—Ä–æ–Ω–æ–º—ñ—è zoom')
        konf9 = types.KeyboardButton('–ì–æ–≤–æ—Ä–∏–ª–∫–∞ zoom')
        back = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(konf1, konf2, konf3, konf4, konf5, konf6, konf7, konf8, konf9, back)
        return markup
def keyboardteach():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    it = types.KeyboardButton('–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞')
    ua = types.KeyboardButton('–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞')
    en = types.KeyboardButton('–ê–Ω–≥–ª—ñ–π—Å—å–∫–∞ –º–æ–≤–∞')
    fiz = types.KeyboardButton('–§—ñ–∑–∏–∫–∞')
    ast = types.KeyboardButton('–ê—Å—Ç—Ä–æ–Ω–æ–º—ñ—è')
    zli = types.KeyboardButton('–ó–∞—Ä—É–±—ñ–∂–Ω–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞')
    geo = types.KeyboardButton('–ì–µ–æ–≥—Ä–∞—Ñ—ñ—è')
    mat = types.KeyboardButton('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞')
    back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(it, ua, en, fiz, ast, zli, geo, mat, back)
    return markup
def keyboardsite():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    math = types.KeyboardButton('–°–∞–π—Ç –∞–ª–≥–µ–±—Ä–∏')
    dnevnik = types.KeyboardButton('–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏–π —â–æ–¥–µ–Ω–Ω–∏–∫')
    back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(math, dnevnik, back)
    return markup
def keyboardcroom():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    geo = types.KeyboardButton('–ì–µ–æ–≥—Ä–∞—Ñ—ñ—è classroom')
    chem = types.KeyboardButton('–•—ñ–º—ñ—è classroom')
    astr = types.KeyboardButton('–ê—Å—Ç—Ä–æ–Ω–æ–º—ñ—è classroom')
    geom = types.KeyboardButton('–ì–µ–æ–º–µ—Ç—Ä—ñ—è classroom')
    back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(geo, chem, astr, geom, back)
    return markup
def keyboardchats():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    math = types.KeyboardButton('–ß–∞—Ç –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏')
    phys = types.KeyboardButton('–ß–∞—Ç —Ñ—ñ–∑–∏–∫–∏')
    geog = types.KeyboardButton('–ß–∞—Ç –≥–µ–æ–≥—Ä–∞—Ñ—ñ—ó')
    biol = types.KeyboardButton('–ß–∞—Ç –±—ñ–æ–ª–æ–≥—ñ—ó')
    back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(math, phys, geog, biol, back)
    return markup
def keyboardknigi():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    markup.add(back)
    return markup
#####################–í–∞–∂–Ω—ã–µ —Å–ª–æ–≤–∞###########################################################

@bot.message_handler(func=lambda message: "–î–æ–ø–æ–º–æ–≥–∞" == message.text, content_types=['text'])
def helps(message):
    bot.reply_to(message, "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–ª–æ–º–∞–ª–æ—Å—å, –∏ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å –ø–æ—á–µ–º—É, —Ç–æ –ø–∏—à–∏ –º–Ω–µ @its_oneguy", reply_markup=keyboard())

@bot.message_handler(func=lambda message: "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è" == message.text, content_types=['text'])
def infor(message):
    bot.reply_to(message, "–©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ?", reply_markup=keyboardinfo())

@bot.message_handler(func=lambda message: "–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—ó" == message.text, content_types=['text'])
def konf(message):
    bot.reply_to(message, "–û—Å—å –≤—Å—ñ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü—ñ—ó", reply_markup=keyboardkonf())

@bot.message_handler(func=lambda message: "–°–∞–π—Ç–∏" == message.text, content_types=['text'])
def helps(message):
    bot.reply_to(message, "–û—Å—å —è–∫—ñ —Å–∞–π—Ç–∏ —è–∫—ñ —è –∑–Ω–∞—é", reply_markup=keyboardsite())

@bot.message_handler(func=lambda message: "Classroom-–∏" == message.text, content_types=['text'])
def helps(message):
    bot.reply_to(message, "–û—Å—å —Ç—ñ –∫–ª–∞—Å—Ä—É–º–∏ —è–∫—ñ –º–∏ –º–∞—î–º–æ", reply_markup=keyboardcroom())

@bot.message_handler(func=lambda message: "–ß–∞—Ç–∏" == message.text, content_types=['text'])
def helps(message):
    bot.reply_to(message, "–û—Å—å —Ç—ñ —á–∞—Ç–∏ –º–∏ –º–∞—î–º–æ", reply_markup=keyboardchats())

@bot.message_handler(func=lambda message: "–ö–Ω–∏–≥–∏" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://t.me/joinchat/SGaRy7Nb-ZS2V3H0', reply_markup=keyboardknigi())
#####################–í–∞–∂–Ω—ã–µ —Å–ª–æ–≤–∞###########################################################
    
@bot.message_handler(func=lambda message: "–°–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫" == message.text, content_types=['text'])
def sogo(message):
    bot.reply_to(message, "–Ø –Ω–µ –ø—Ä–∞—Ü—é—é, –º–æ–∂–ª–∏–≤–æ –±—É–¥—É, –∞ –º–æ–∂–ª–∏–≤–æ –Ω—ñ", reply_markup=keyboard())

@bot.message_handler(func=lambda message: "–†–æ–∑–∫–ª–∞–¥" == message.text, content_types=['text'])
def roskl(message):
    bot.reply_to(message, "–ù–∞ –∫–æ—Ç—Ä–∏–π –¥–µ–Ω—å —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–µ–Ω —Ä–æ–∑–∫–ª–∞–¥?", reply_markup=keyboardate())

@bot.message_handler(func=lambda message: "–ù–∞–∑–∞–¥" == message.text, content_types=['text'])
def back(message):
    bot.reply_to(message, "–î–æ–±—Ä–µ, —â–æ —Ö–æ—á–µ—à?", reply_markup=keyboard())

@bot.message_handler(func=lambda message: "–í—á–∏—Ç–µ–ª—ñ" == message.text, content_types=['text'])
def back(message):
    bot.reply_to(message, "–Ø–∫–∏–π –ø–æ—Ç—Ä—ñ–±–µ–Ω —Ç–æ–±—ñ –∑–∞—Ä–∞–∑?", reply_markup=keyboardteach())

@bot.message_handler(func=lambda message: "–†–æ–∑–∫–ª–∞–¥ –¥–∑–≤—ñ–Ω–∫—ñ–≤" == message.text, content_types=['text'])
def back(message):
    bot.reply_to(message, "1-–∏–π —É—Ä–æ–∫ 8.10 - 8.55 \n 2-–∏–π —É—Ä–æ–∫ 9.05 - 9.50 \n 3-–∏–π —É—Ä–æ–∫ 10.05 - 10.50 \n 4-–∏–π —É—Ä–æ–∫ 11.05 - 11.50 \n 5-–∏–π —É—Ä–æ–∫ 12.05 - 12.50 \n 6-–∏–π —É—Ä–æ–∫ 13.05 - 13.50 \n 7-–∏–π —É—Ä–æ–∫ 14.05 - 14.50", reply_markup=keyboardknigi())

#################–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ#################################################################
    
@bot.message_handler(func=lambda message: "–ü–æ–Ω–µ–¥—ñ–ª–æ–∫" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, '1. –§—ñ–∑-—Ä–∞‚öΩ \n 2. –ê–Ω–≥–ª—ñ–π—Å—å–∫–∞ –º–æ–≤–∞ üá¨üáß\n 3. –ê–ª–≥–µ–±—Ä–∞ üöë\n 4. –ê–ª–≥–µ–±—Ä–∞\n 5. –í—Å–µ—Å–≤—ñ—Ç–Ω—è —ñ—Å—Ç–æ—Ä—ñ—è ‚úù\n 6. –ê—Å—Ç—Ä–æ–Ω–æ–º—ñ—è üåì')

@bot.message_handler(func=lambda message: "–í—ñ–≤—Ç–æ—Ä–æ–∫" == message.text, content_types=['text'])
def tue(message):
    bot.send_message(message.chat.id, '1. –ì–µ–æ–º–µ—Ç—Ä—ñ—è (1 –≥—Ä—É–ø–ø–∞) üë®‚Äçüéì \n –§—ñ–∑–∏–∫–∞ (2 –≥—Ä—É–ø–ø–∞) üì°\n 2. –ì–µ–æ–º–µ—Ç—Ä—ñ—è (1 –≥—Ä—É–ø–ø–∞)\n –§—ñ–∑–∏–∫–∞ (2 –≥—Ä—É–ø–ø–∞)\n3. –§—ñ–∑–∏–∫–∞ (1 –≥—Ä—É–ø–ø–∞)üì° \n –ì–µ–æ–º–µ—Ç—Ä—ñ—è (2 –≥—Ä—É–ø–ø–∞)üë®‚Äçüéì \n4. –§—ñ–∑–∏–∫–∞ (1 –≥—Ä—É–ø–ø–∞)\n –ì–µ–æ–º–µ—Ç—Ä—ñ—è (2 –≥—Ä—É–ø–ø–∞)\n5. –§—ñ–∑–∏–∫–∞ (–ª–µ–∫—Ü—ñ—è)\n6. –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞ üá∫üá¶ \n 7. –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞')

@bot.message_handler(func=lambda message: "–°–µ—Ä–µ–¥–∞" == message.text, content_types=['text'])
def wed(message):
    bot.send_message(message.chat.id, '1. –§—ñ–∑-—Ä–∞ ‚öΩ\n2. –ì–µ–æ–≥—Ä–∞—Ñ—ñ—è üåé\n3. –ì–µ–æ–≥—Ä–∞—Ñ—ñ—è\n4. –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞ üìñ\n5. –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞\n6. –Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ üíª\n7. –Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞')

@bot.message_handler(func=lambda message: "–ß–µ—Ç–≤–µ—Ä" == message.text, content_types=['text'])
def thu(message):
    bot.send_message(message.chat.id, '1. –•—ñ–º—ñ—è (1 –≥—Ä—É–ø–ø–∞)\n–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó (2 –≥—Ä—É–ø–ø–∞)üíª \n2. –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó (1 –≥—Ä—É–ø–ø–∞)\n–•—ñ–º—ñ—è (2 –≥—Ä—É–ø–ø–∞)\n3. –•—ñ–º—ñ—è\n4.–ú–∏—Å—Ç–µ—Ü—Ç–≤–æ üé®\n5. –ê–ª–≥–µ–±—Ä–∞ üöë\n6. –ì–µ–æ–º–µ—Ç—Ä—ñ—è üë®‚Äçüéì\n7. –Ü—Å—Ç–æ—Ä—ñ—è –£–∫—Ä–∞—ó–Ω–∏ üè∫  ')

@bot.message_handler(func=lambda message: "–ü—è—Ç–Ω–∏—Ü—è" == message.text, content_types=['text'])
def fri(message):
    bot.send_message(message.chat.id, '1. –§—ñ–∑–∏–∫–∞\n2. –§—ñ–∑–∏–∫–∞üì°\n3. –ê–Ω–≥–ª—ñ–π—Å—å–∫–∞ –º–æ–≤–∞ üá¨üáß\n4. –§—ñ–∑-—Ä–∞‚öΩ\n5. –ó–∞—Ä—É–±—ñ–∂–Ω–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞ üìñ\n6. –í–∏—Ö–æ–≤–Ω–∞ –≥–æ–¥–∏–Ω–∞üïì')

@bot.message_handler(func=lambda message: "–°—É–±–æ—Ç–∞" == message.text, content_types=['text'])
def sat(message):
    bot.send_message(message.chat.id, '1. –ë—ñ–æ–ª–æ–≥—ñ—è ‚ò£\n2. –ë—ñ–æ–ª–æ–≥—ñ—è\n3. –ê–ª–≥–µ–±—Ä–∞ üöë\n4. –ê–ª–≥–µ–±—Ä–∞\n5. –ù–∞—É–∫–æ–≤–∏–π –ø—Ä–∞–∫—Ç–∏–∫—É–º üì°\n6. –ù–∞—É–∫–æ–≤–∏–π –ø—Ä–∞–∫—Ç–∏–∫—É–º')
    
##################–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏##################################################################

@bot.message_handler(func=lambda message: "–§—ñ–∑–∏–∫–∞ zoom" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://us04web.zoom.us/j/2509604987?pwd=bjVSczI2a3VEWTZYdUZjVmdJbityUT09')

@bot.message_handler(func=lambda message: "–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –Ü–¢ zoom" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://us04web.zoom.us/j/7939162434?pwd=UXlub3ZYK2FLMVpTbHM1VUxZaG8wZz09')

@bot.message_handler(func=lambda message: "–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ 1 –≥—Ä—É–ø–ø–∞ skype" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://join.skype.com/bHoMS0ZntVit')

@bot.message_handler(func=lambda message: "–ì–µ–æ–º–µ—Ç—Ä—ñ—è google" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://meet.google.com/yoo-esyf-sdp')

@bot.message_handler(func=lambda message: "–ó–∞—Ä—É–±—ñ–∂–Ω–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞ zoom" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, '–Ü–¥–∏ –≤ —á–∞—Ç –∑–∞—Ä—É–±—ñ–∂–∫–∏, –≤–æ–Ω–æ –Ω–µ –ø–æ—Å—Ç—ñ–π–Ω–µ')

@bot.message_handler(func=lambda message: "–ì–µ–æ–≥—Ä–∞—Ñ—ñ—è google" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://meet.google.com/hsq-miim-fzw')
    
@bot.message_handler(func=lambda message: "–ê—Å—Ç—Ä–æ–Ω–æ–º—ñ—è zoom" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://us02web.zoom.us/j/83052039200?pwd=NzhhK2tHWUR5YkQ0NEF2L3p1Ujl3Zz09')

@bot.message_handler(func=lambda message: "–ì–æ–≤–æ—Ä–∏–ª–∫–∞ zoom" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://us04web.zoom.us/j/7728419604?pwd=Um5Vbk9sOXdqd3JPZlRHMFhLUlRyQT09')
    
##################–£—á–∏—Ç–µ–ª—è#####################################################################

@bot.message_handler(func=lambda message: "–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, '–í–æ–π—Ü–µ—Ö–æ–≤—Å–∫–∏–π –ú–∏–∫–æ–ª–∞ –û–ª–µ–∫—Å—ñ–π–æ–≤–∏—á (—ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ 2 –≥—Ä—É–ø–∞, –Ü–¢) - nickalexv@hotmail.com - +380509311670')
    
@bot.message_handler(func=lambda message: "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, '–õ—é–±–æ–º–∏—Ä–∞ –í–æ–ª–æ–¥–∏–º–∏—Ä—ñ–≤–Ω–∞ (—É–∫—Ä. –º–æ–≤–∞, 1 –≥—Ä—É–ø–∞) - fml811kl@gmail.com - +380968129398 \n\n –ü–æ—Ä–∞–ª–æ –ù–∞—Ç–∞–ª—ñ—è –î–º–∏—Ç—Ä—ñ–≤–Ω–∞ (—É–∫—Ä. –º–æ–≤–∞ 2 –≥—Ä—É–ø–∞, —É–∫—Ä. –ª—ñ—Ç) - oginka@bk.ru')
    
@bot.message_handler(func=lambda message: "–ê–Ω–≥–ª—ñ–π—Å—å–∫–∞ –º–æ–≤–∞" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, '–ß—É–º–∞–∫–æ–≤–∞ –û–∫—Å–∞–Ω–∞ –û–ª–µ–∫—Å–∞–Ω–¥—Ä—ñ–≤–Ω–∞ (–∞–Ω–≥–ª. –º–æ–≤–∞ 2 –≥—Ä—É–ø–∞) - oksana7902932@bigmir.net')
    
@bot.message_handler(func=lambda message: "–§—ñ–∑–∏–∫–∞" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, '–†—É–±—Ü–æ–≤–∞ –Ü—Ä–∏–Ω–∞ –õ—å–≤—ñ–≤–Ω–∞ (—Ñ—ñ–∑–∏–∫–∞) - ira.rubts@gmail.com - +380501910780')
    
@bot.message_handler(func=lambda message: "–ê—Å—Ç—Ä–æ–Ω–æ–º—ñ—è" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, '–í–∞—Å–∏–ª—å –û–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á (–ê—Å—Ç—Ä–æ–Ω–æ–º—ñ—è) - v.ponomar08@gmail.com')
    
@bot.message_handler(func=lambda message: "–ó–∞—Ä—É–±—ñ–∂–Ω–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, '–í—ñ—Ç–∞–ª—ñ–Ω–∞ –û–ª–µ–≥—ñ–≤–Ω–∞ (–∑–∞—Ä. –ª—ñ—Ç) - vitakot1997@gmail.com')
    
@bot.message_handler(func=lambda message: "–ì–µ–æ–≥—Ä–∞—Ñ—ñ—è" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, '–ê—Ä–º—ñ–Ω–µ –õ–∞–≤—Ä–µ–Ω—Ç—ñ—ó–≤–Ω–∞ (–≥–µ–æ–≥—Ä–∞—Ñ—ñ—è, –û–ó) - armminemir@gmail.com')
    
@bot.message_handler(func=lambda message: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, '–û–ª–µ–∫—Å—ñ–π –ê–Ω–∞—Ç–æ–ª—ñ–π–æ–≤–∏—á (–ê–ª–≥–µ–±—Ä–∞) - pecheritsa.aleksey@gmail.com - +380972687157 \n\n –í—ñ–∫—Ç–æ—Ä—ñ—è –ë–æ—Ä–∏—Å—ñ–≤–Ω–∞ (–ì–µ–æ–º–µ—Ç—Ä—ñ—è) - +380634197635')
    
##################–°–∞–π—Ç—ã#######################################################################
@bot.message_handler(func=lambda message: "–°–∞–π—Ç –∞–ª–≥–µ–±—Ä–∏" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'http://sites.google.com/view/omg-upml')

@bot.message_handler(func=lambda message: "–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏–π —â–æ–¥–µ–Ω–Ω–∏–∫" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://atoms.com.ua/')

##################Classroom-—ã#################################################################
@bot.message_handler(func=lambda message: "–ì–µ–æ–≥—Ä–∞—Ñ—ñ—è classroom" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://classroom.google.com/c/MTU2MTMyMDM3MzU5?cjc=lo2aefg')
    
@bot.message_handler(func=lambda message: "–•—ñ–º—ñ—è classroom" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, '–¶–µ —î–¥–∏–Ω–∏–π –∫–ª–∞—Å—Å—Ä—É–º –±–µ–∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è, —Ç—ñ–ª—å–∫–∏ –ø–æ –∫–æ–¥—É:')
    bot.send_message(message.chat.id, 'exkqjcj')
    
@bot.message_handler(func=lambda message: "–ê—Å—Ç—Ä–æ–Ω–æ–º—ñ—è classroom" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://classroom.google.com/c/MTYzMDEwOTU3NjIz?cjc=jc4apb4')

@bot.message_handler(func=lambda message: "–ì–µ–æ–º–µ—Ç—Ä—ñ—è classroom" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://classroom.google.com/c/MTgwNzUyMzE5NDA3?cjc=lijlnxa')
##################–ß–∞—Ç—ã#######################################################################

@bot.message_handler(func=lambda message: "–ß–∞—Ç –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://t.me/joinchat/MLIwYBN1JY9yiUw0Dw9ZBA')

@bot.message_handler(func=lambda message: "–ß–∞—Ç —Ñ—ñ–∑–∏–∫–∏" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://t.me/joinchat/MLIwYBmeGMOc6NiPg7wsJQ')

@bot.message_handler(func=lambda message: "–ß–∞—Ç –≥–µ–æ–≥—Ä–∞—Ñ—ñ—ó" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://t.me/joinchat/NGbFclTnZJk8dS6AGq_K6Q')

@bot.message_handler(func=lambda message: "–ß–∞—Ç –±—ñ–æ–ª–æ–≥—ñ—ó" == message.text, content_types=['text'])
def mon(message):
    bot.send_message(message.chat.id, 'https://t.me/joinchat/OBBhBhe_b23nSVUnHv2-cg')
##################–ö–æ–Ω–µ—Ü –±–æ—Ç–∞##################################################################

bot.remove_webhook()

# Set webhook
bot.set_webhook(url=WEBHOOK_URL_BASE + WEBHOOK_URL_PATH,
                certificate=open(WEBHOOK_SSL_CERT, 'r'))

# Disable CherryPy requests log
access_log = cherrypy.log.access_log
for handler in tuple(access_log.handlers):
    access_log.removeHandler(handler)

# Start cherrypy server
cherrypy.config.update({
    'server.socket_host'    : WEBHOOK_LISTEN,
    'server.socket_port'    : WEBHOOK_PORT,
    'server.ssl_module'     : 'builtin',
    'server.ssl_certificate': WEBHOOK_SSL_CERT,
    'server.ssl_private_key': WEBHOOK_SSL_PRIV
})

cherrypy.quickstart(WebhookServer(), WEBHOOK_URL_PATH, {'/': {}})
